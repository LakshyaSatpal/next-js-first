{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\laksh\\\\Desktop\\\\Web Development\\\\NextJS\\\\project2\\\\pages\\\\[meetupId].js\";\nimport React, { Fragment } from \"react\";\n// import { useRouter } from \"next/router\";\n// import { Fragment } from \"react/cjs/react.production.min\";\nimport MeetupDetail from \"../components/meetups/MeetupDetail\";\nimport Head from \"next/head\";\n\nfunction MeetupDetails(_ref) {\n  var meetupData = _ref.meetupData;\n  //   const router = useRouter();\n  //   const meetupId = router.query.meetupId;\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: meetupData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"desc\",\n        content: meetupData.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: meetupData.image,\n      title: meetupData.title,\n      address: meetupData.address,\n      description: meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["C:/Users/laksh/Desktop/Web Development/NextJS/project2/pages/[meetupId].js"],"names":["React","Fragment","MeetupDetail","Head","MeetupDetails","meetupData","title","description","image","address"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA;AACA;AACA,OAAOC,YAAP,MAAyB,oCAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AACA,SAASC,aAAT,OAAuC;AAAA,MAAdC,UAAc,QAAdA,UAAc;AACrC;AACA;AAEA,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA,kBAAQA,UAAU,CAACC;AAAnB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,IAAI,EAAC,MAAX;AAAkB,QAAA,OAAO,EAAED,UAAU,CAACE;AAAtC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,YAAD;AACE,MAAA,KAAK,EAAEF,UAAU,CAACG,KADpB;AAEE,MAAA,KAAK,EAAEH,UAAU,CAACC,KAFpB;AAGE,MAAA,OAAO,EAAED,UAAU,CAACI,OAHtB;AAIE,MAAA,WAAW,EAAEJ,UAAU,CAACE;AAJ1B;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;KAlBQH,a;;AAsET,eAAeA,aAAf","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport { MongoClient, ObjectId } from \"mongodb\";\r\n// import { useRouter } from \"next/router\";\r\n// import { Fragment } from \"react/cjs/react.production.min\";\r\nimport MeetupDetail from \"../components/meetups/MeetupDetail\";\r\nimport Head from \"next/head\";\r\nfunction MeetupDetails({ meetupData }) {\r\n  //   const router = useRouter();\r\n  //   const meetupId = router.query.meetupId;\r\n\r\n  return (\r\n    <Fragment>\r\n      <Head>\r\n        <title>{meetupData.title}</title>\r\n        <meta name=\"desc\" content={meetupData.description} />\r\n      </Head>\r\n      <MeetupDetail\r\n        image={meetupData.image}\r\n        title={meetupData.title}\r\n        address={meetupData.address}\r\n        description={meetupData.description}\r\n      />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  // this dynamic page has to be pre-generated as we are using getStaticProps() at the time of build\r\n  // but we don't know, what \"meetupId\" user will request\r\n  // so we need to specify the ids, for which we want this page to pre-generated and user should get 404 if he request any id other than these\r\n\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://Lakshya:Lakshya%40123@cluster0.pxdli.mongodb.net/next-js?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n\r\n  client.close();\r\n\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({\r\n      params: {\r\n        meetupId: meetup._id.toString(),\r\n      },\r\n    })),\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  const { meetupId } = context.params; // to get meetupId from URL\r\n\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://Lakshya:Lakshya%40123@cluster0.pxdli.mongodb.net/next-js?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  const meetup = await meetupsCollection.findOne({ _id: ObjectId(meetupId) });\r\n\r\n  client.close();\r\n\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        title: meetup.title,\r\n        address: meetup.address,\r\n        image: meetup.image,\r\n        description: meetup.description,\r\n        id: meetup._id.toString(),\r\n      },\r\n    },\r\n    revalidate: 1,\r\n  };\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}