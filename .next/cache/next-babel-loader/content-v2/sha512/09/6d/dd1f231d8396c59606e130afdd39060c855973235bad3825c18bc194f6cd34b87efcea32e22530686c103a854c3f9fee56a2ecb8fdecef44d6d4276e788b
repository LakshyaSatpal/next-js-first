{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\laksh\\\\Desktop\\\\Web Development\\\\NextJS\\\\project2\\\\pages\\\\[meetupId].js\";\nimport React from \"react\";\n// import { useRouter } from \"next/router\";\n// import { Fragment } from \"react/cjs/react.production.min\";\nimport MeetupDetail from \"../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails(_ref) {\n  var meetupData = _ref.meetupData;\n  //   const router = useRouter();\n  //   const meetupId = router.query.meetupId;\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: meetupData.image,\n    title: meetupData.title,\n    address: meetupData.address,\n    description: meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["C:/Users/laksh/Desktop/Web Development/NextJS/project2/pages/[meetupId].js"],"names":["React","MeetupDetail","MeetupDetails","meetupData","image","title","address","description"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA;AACA;AACA,OAAOC,YAAP,MAAyB,oCAAzB;;AACA,SAASC,aAAT,OAAuC;AAAA,MAAdC,UAAc,QAAdA,UAAc;AACrC;AACA;AACA,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEA,UAAU,CAACC,KADpB;AAEE,IAAA,KAAK,EAAED,UAAU,CAACE,KAFpB;AAGE,IAAA,OAAO,EAAEF,UAAU,CAACG,OAHtB;AAIE,IAAA,WAAW,EAAEH,UAAU,CAACI;AAJ1B;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;KAXQL,a;;AAyDT,eAAeA,aAAf","sourcesContent":["import React from \"react\";\r\nimport { MongoClient, ObjectId } from \"mongodb\";\r\n// import { useRouter } from \"next/router\";\r\n// import { Fragment } from \"react/cjs/react.production.min\";\r\nimport MeetupDetail from \"../components/meetups/MeetupDetail\";\r\nfunction MeetupDetails({ meetupData }) {\r\n  //   const router = useRouter();\r\n  //   const meetupId = router.query.meetupId;\r\n  return (\r\n    <MeetupDetail\r\n      image={meetupData.image}\r\n      title={meetupData.title}\r\n      address={meetupData.address}\r\n      description={meetupData.description}\r\n    />\r\n  );\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  // this dynamic page has to be pre-generated as we are using getStaticProps() at the time of build\r\n  // but we don't know, what \"meetupId\" user will request\r\n  // so we need to specify the ids, for which we want this page to pre-generated and user should get 404 if he request any id other than these\r\n\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://Lakshya:Lakshya%40123@cluster0.pxdli.mongodb.net/next-js?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n\r\n  client.close();\r\n\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({\r\n      params: {\r\n        meetupId: meetup._id.toString(),\r\n      },\r\n    })),\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  const { meetupId } = context.params; // to get meetupId from URL\r\n\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://Lakshya:Lakshya%40123@cluster0.pxdli.mongodb.net/next-js?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  const meetup = await meetupsCollection.findOne({ _id: ObjectId(meetupId) });\r\n\r\n  client.close();\r\n\r\n  return {\r\n    props: {\r\n      meetupData: meetup,\r\n    },\r\n    revalidate: 1,\r\n  };\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}